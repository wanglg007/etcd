(1)消息
(1.1)MsgHup消息
    Follower节点在选举计时器超时的行为：首先它会通过tickElection()创建MsgHUP消息并将其交给raft.Step方法进行处理；raft.Step方法会将当前Follower节点
切换成PreCandidate状态，然后创建MsgPreVote类型的消息，最后将该消息追加到raft.msgs字段中，等待上层模块将其发送出去。
(1.2)MsgPriVote消息
    当集群中其他节点收到上节所述节点发送来的MsgPreVote消息之后，经过网络层及相关验证之后，最终也会调用raft.Step()方法进行处理。消息处理过程为：
raft.Setp()方法首先检测该MsgPreVote消息是否为Leader节点迁移时发出的消息及其他合法性检测，决定当前节点是否参与此次选举；之后当前节点会根据自身的决定
决定是否将投票给MsgPreVote消息的发送节点。
(1.3)MsgPreVoteResp消息
    PreCandidate节点会收到集群中其他节点返回的MsgPreVoteResponse消息，其他的Term字段与PreCandidate节点的Term值相同。在raft.Step()方法中没有对Term值
相等的MsgPreVoteResp消息做特殊的处理，而是直接交给了raft.step字段指向的函数进行处理。
    当PreCandidate状态节点收到半数以上的投票时，会通过r.campaign()方法发起正式选举，其中会通过raft.becomeCandidate()方法将当前节点切换成Candidate状态，
并向剩余其他节点发送MsgVote消息。
(1.4)MsgVote消息
    PreCandidate状态节点收到半数以上的投票之后，会发起新一轮的选举，即向集群中的其他节点发送MsgVote消息。当集群中的其他节点收到MsgVote消息之后，也是
交由raft.Setp()方法进行处理。
    raft.Step()方法中根据消息类型进行分类处理的代码片段中，除了检测当前节点是否投票及发送MsgVoteResponse消息，还会重置当前节点的选举超时计时器并更新
raft.Vote字段。
(1.5)MsgVoteResp消息
    该消息由raft.setpCandidate()方法进行处理。该消息的处理过程：raft.Setp()方法首先检测当前节点是否收到半数以上的选票。如果是，则将当前节点切换成Leader
状态，之后向集群中其他节点发送消息。
(1.6)MspApp消息
    在MsgAPP消息的处理过程中，集群中其他节点已经切换成了Follower状态，并且它们自身记录的Term值与该任期中Leader节点维护的Term值相同。当它们收到当前
Leader节点发来的MsgAPP消息时，也是交由raft.Step()方法处理。
(1.7)MspAppResp消息
    当Leader节点收到集群中其他Follower节点发送的MsgAppResp相应消息之后，也是交由raft.Step()方法进行处理的，其中会调用raft.step字段指向的StepLeader()
函数进行处理。
(1.8)MsgBeat消息和MsgCheckQuorum消息
    Leader节点除了向集群中其他Follower节点发送MsgAPP消息，还会向这些Follower节点发送MsgBeat消息。MsgBeat消息的主要作用是探活，当Follower节点收到
MsgBeat消息时会重置其选举计时器，从而防止Follower节点发起新一轮选举。
(1.9)MsgHeartbeat消息和MsgHeartbeatResp消息
    当集群中的Follower节点收到Leader节点发来的MsgHeartbeat消息之后，也是通过raft.Step()方法调用raft.stepFollower()方法进行处理的，处理完成后会向
Leader节点返回相应的MsgHeartbeatResp消息作为响应。
(1.10)MsgProp消息
    客户端发往到集群的写请求是通过MsgProp消息表示的。Leader节点对于MsgProp消息的主要处理实在raft.stepLeader()方法中实现的。
    当集群中的Candidate节点收到客户端发来的MsgProp消息时，会直接忽略该消息。当Follower节点收到MsgProp消息时，会将该MsgProp消息转发给当前集群的
Leader节点。
(1.11)MsgReadIndex消息和MsgReadIndexResp消息
    客户端的读请求需要读到集群中最新的、已提交的数据，而不能读到老数据。在现实场景中也经常会遇到读多写少的情况，如果每次读请求都涉及多个节点
的磁盘操作，则性能必然较差。Leader节点保存了整个集群中最新的数据，如果只读请求只访问Leader节点，则Leader节点可以直接将结果返回给客户端，但是在
网络分区的场景下，一个旧的Leader节点就可能返回旧数据。
    客户端发往集群的只读请求使用MsgReadIndex消息表示，其中只读请求有两种模式，分别是ReadOnlySafe和ReadOnlyLeaseBased。Leader节点对于MsgReadIndex
消息的处理在raft.stepLeader()方法中实现的。
(1.12)MsgSnap消息
    在Leader节点尝试向集群中的Follower节点发送MsgAPP消息时，如果查找不到待发送的Entry记录(即该Follow节点对应的Progress.Next指定的Entry记录)，则
会尝试通过MsgSnap消息将快照数据发送到Follower节点，Follower节点之后会通过快照数据恢复其自身状态，从而可以与Leader节点进行正常的Entry记录复制。
例如，当Follower节点宕机时间比较长，就可能出现上述发送Snap消息的场景。
















